name: ChatGPT Workflow

on:
  push:
    paths:
      - 'tasks.py'

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai

      - name: Read tasks.py and Generate README
        run: |
          python -c "
          import openai
          import os
          # Read content
          with open('tasks.py', 'r') as file:
              lines = file.readlines()
          start_line = next(i for i, line in enumerate(lines, start=1) if '# auto-generated SQLite documentation starts here' in line)
          content = ''.join(lines[start_line-1:])

          # Call to ChatGPT
          openai.api_key = os.getenv('OPENAI_API_KEY')
          prompt = content
          response = openai.ChatCompletion.create(engine='gpt-4', messages=[{'role': 'user', 'content': f'{prompt}\nGenerate a markdown table for each table of the SQLite database. For example:\n\n**Table 1**\n|event_name|day|hour|occurences\n|description of the column|etc.\n\n**Table 2**\n|col1|col2|...\n\netc.'}])
          readme_content = response.choices[0].message.content.strip()

          # Write to db_doc.md
          with open('db_doc.md', 'w') as file:
              file.write(readme_content)
          "

      - name: Commit and Push
        uses: EndBug/add-and-commit@v7
        with:
          message: 'Update db_doc.md'
          add: 'db_doc.md'
